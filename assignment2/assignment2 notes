Assignment 2

c.)
select term 
from Frequency 
where docid = '10398_txt_earn'
 and count = 1

select term
from Frequency
where docid = '925_txt_trade'
 and count=1

select term a term b

SELECT p1.domain_id, p2.domain_id, COUNT(p1.domain_id) AS d1, COUNT(p2.domain_id) AS d2
    FROM PDB as p1, Interacting_PDBs as i1, PDB as p2, Interacting_PDBs as i2
    WHERE p1.id = i1.PDB_first_id
    AND p2.id = i2.PDB_second_id
    AND i1.id = i2.id
GROUP BY p1.domain_Id, p2.domain_Id
HAVING d1 > 100 AND d2 > 100
ORDER BY d1, d2;

SELECT docid, SUM(term) AS d1
from Frequency
GROUP BY docid
ORDER BY d1
HAVING d1 > 300
ORDER BY d1;

https://class.coursera.org/datasci-002/forum/thread?thread_id=1352

(h) similarity matrix: Write a query to compute the similarity matrix DDT. (Hint: The transpose is trivial -- just join on columns to columns instead of columns to rows.) The query could take some time to run if you compute the entire result. But notice that you don't need to compute the similarity of both (doc1, doc2) and (doc2, doc1) -- they are the same, since similarity is symmetric. If you wish, you can avoid this wasted work by adding a condition of the form a.docid < b.docid to your query. (But the query still won't return immediately if you try to compute every result -- don't expect otherwise.)

What to turn in: On the assignment website, turn in a text document similarity_matrix.txt that contains a single line giving the similarity of the two documents '10080_txt_crude' and '17035_txt_earn'.
